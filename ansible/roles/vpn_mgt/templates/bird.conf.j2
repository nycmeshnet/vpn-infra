# Managed by ansible

# Configure logging
log syslog all;

router id {{ BIRD_ROUTER_ID }};

protocol device {
    scan time 10;
}

protocol direct {
    ipv4;                   # Connect to default IPv4 table
}

protocol kernel {
    persist;
    scan time 10;
    ipv4 {                  # Connect protocol to IPv4 table by channel
        import all;   # Import to table, default is import all
        export filter {    # Export to protocol but exclude VPN endpoints, default is none
            if net = 23.158.16.28/32 then reject;
            if net = 199.170.132.43/32 then reject;
            accept;
        };
    };
}

protocol static {
    ipv4;                   # Again, IPv4 channel with default options
}

protocol bfd {
{% for wg_config in wireguard_configs %}
{% if wg_config.BFD_ENABLE is defined and wg_config.BFD_ENABLE %}
    interface "wg{{ wg_config.NAME }}" {
        interval {{ wg_config.BFD_INTERVAL | default("200ms") }};
        multiplier {{ wg_config.BFD_MULTIPLIER | default(5) }};
        authentication none;
    };
    {% endif %}
    {% endfor %}
}

protocol ospf v2 {
    ipv4 {
        import all;
        export all;
    };
    area 0 {
        default cost 10;
        networks {
{% for bird_net in BIRD_NETWORKS.split(';') %}
            {{ bird_net }};
{% endfor %}

        };
        interface "eth*" {
            type broadcast; # Detected by default
            cost 10;                # Interface metric
        };
        interface "dummy*" {
            cost 10;
        };
{% for wg_config in wireguard_configs %}
{% if wg_config.NEIGHBORS is defined %}
        interface "wg{{ wg_config.NAME }}" {
            cost {{ wg_config.COST | default(100) }};
            tx length {{ wg_config.TX_LENGTH | default(1420) }};
            type ptmp;
            {% if wg_config.BFD_ENABLE is defined %}
            bfd {{  "yes" if (wg_config.BFD_ENABLE == true or wg_config.BFD_ENABLE == "yes") else "no" }};
            {% endif %}
            neighbors {
                {{ wg_config.NEIGHBORS }};
            };
        };
{% endif %}
{% endfor %}
    };
}
